import { AsyncAction } from '../async';
import { AddStreamPayload } from './StreamActions';
export interface MediaDevice {
    id: string;
    name: string;
    type: 'audioinput' | 'videoinput';
}
export declare const enumerateDevices: () => import("../async").PendingAction<"MEDIA_ENUMERATE", MediaDevice[]>;
export declare type FacingMode = 'user' | 'environment';
export interface DeviceConstraint {
    deviceId: string;
}
export interface FacingConstraint {
    facingMode: FacingMode | {
        exact: FacingMode;
    };
}
export declare type VideoConstraint = DeviceConstraint | boolean | FacingConstraint;
export declare type AudioConstraint = DeviceConstraint | boolean;
export interface GetMediaConstraints {
    video: VideoConstraint;
    audio: AudioConstraint;
}
declare global {
    interface Navigator {
        webkitGetUserMedia?: typeof navigator.getUserMedia;
        mozGetUserMedia?: typeof navigator.getUserMedia;
    }
}
export interface MediaVideoConstraintAction {
    type: 'MEDIA_VIDEO_CONSTRAINT_SET';
    payload: VideoConstraint;
}
export interface MediaAudioConstraintAction {
    type: 'MEDIA_AUDIO_CONSTRAINT_SET';
    payload: AudioConstraint;
}
export declare function setVideoConstraint(payload: VideoConstraint): MediaVideoConstraintAction;
export declare function setAudioConstraint(payload: AudioConstraint): MediaAudioConstraintAction;
export declare const play: () => import("../async").PendingAction<"MEDIA_PLAY", void>;
export declare const getMediaStream: (constraints: GetMediaConstraints) => import("../async").PendingAction<"MEDIA_STREAM", AddStreamPayload>;
export declare const getDesktopStream: () => import("../async").PendingAction<"MEDIA_STREAM", AddStreamPayload>;
export declare type MediaEnumerateAction = AsyncAction<'MEDIA_ENUMERATE', MediaDevice[]>;
export declare type MediaStreamAction = AsyncAction<'MEDIA_STREAM', AddStreamPayload>;
export declare type MediaPlayAction = AsyncAction<'MEDIA_PLAY', void>;
export declare type MediaAction = MediaVideoConstraintAction | MediaAudioConstraintAction | MediaEnumerateAction | MediaStreamAction | MediaPlayAction;
//# sourceMappingURL=MediaActions.d.ts.map