"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var async_1 = require("../async");
var constants_1 = require("../constants");
var debug_1 = __importDefault(require("debug"));
var debug = debug_1["default"]('peercalls');
exports.enumerateDevices = async_1.makeAction(constants_1.MEDIA_ENUMERATE, function () { return __awaiter(void 0, void 0, void 0, function () {
    var devices;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, navigator.mediaDevices.enumerateDevices()];
            case 1:
                devices = _a.sent();
                return [2 /*return*/, devices
                        .filter(function (device) { return device.kind === 'audioinput' || device.kind === 'videoinput'; })
                        .map(function (device) { return ({
                        id: device.deviceId,
                        type: device.kind,
                        name: device.label
                    }); })];
        }
    });
}); });
function getUserMedia(constraints) {
    return __awaiter(this, void 0, void 0, function () {
        var _getUserMedia;
        return __generator(this, function (_a) {
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                return [2 /*return*/, navigator.mediaDevices.getUserMedia(constraints)];
            }
            _getUserMedia = navigator.getUserMedia ||
                navigator.webkitGetUserMedia ||
                navigator.mozGetUserMedia;
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    _getUserMedia.call(navigator, constraints, resolve, reject);
                })];
        });
    });
}
function getDisplayMedia() {
    return __awaiter(this, void 0, void 0, function () {
        var mediaDevices;
        return __generator(this, function (_a) {
            mediaDevices = navigator.mediaDevices // eslint-disable-line
            ;
            return [2 /*return*/, mediaDevices.getDisplayMedia({ video: true, audio: false })];
        });
    });
}
function setVideoConstraint(payload) {
    return {
        type: constants_1.MEDIA_VIDEO_CONSTRAINT_SET,
        payload: payload
    };
}
exports.setVideoConstraint = setVideoConstraint;
function setAudioConstraint(payload) {
    return {
        type: constants_1.MEDIA_AUDIO_CONSTRAINT_SET,
        payload: payload
    };
}
exports.setAudioConstraint = setAudioConstraint;
exports.play = async_1.makeAction('MEDIA_PLAY', function () { return __awaiter(void 0, void 0, void 0, function () {
    var promises;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                promises = Array
                    .from(document.querySelectorAll('video'))
                    .filter(function (video) { return video.paused; })
                    .map(function (video) { return video.play(); });
                return [4 /*yield*/, Promise.all(promises)];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); });
exports.getMediaStream = async_1.makeAction(constants_1.MEDIA_STREAM, function (constraints) { return __awaiter(void 0, void 0, void 0, function () {
    var payload, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                debug('getMediaStream', constraints);
                _a = {};
                return [4 /*yield*/, getUserMedia(constraints)];
            case 1:
                payload = (_a.stream = _b.sent(),
                    _a.type = constants_1.STREAM_TYPE_CAMERA,
                    _a.userId = constants_1.ME,
                    _a);
                return [2 /*return*/, payload];
        }
    });
}); });
exports.getDesktopStream = async_1.makeAction(constants_1.MEDIA_STREAM, function () { return __awaiter(void 0, void 0, void 0, function () {
    var payload, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                debug('getDesktopStream');
                _a = {};
                return [4 /*yield*/, getDisplayMedia()];
            case 1:
                payload = (_a.stream = _b.sent(),
                    _a.type = constants_1.STREAM_TYPE_DESKTOP,
                    _a.userId = constants_1.ME,
                    _a);
                return [2 /*return*/, payload];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,