"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
jest.mock('../socket');
jest.mock('../window');
jest.mock('./SocketActions');
var CallActions = __importStar(require("./CallActions"));
var SocketActions = __importStar(require("./SocketActions"));
var constants = __importStar(require("../constants"));
var socket_1 = __importDefault(require("../socket"));
var redux_1 = require("redux");
var reducers_1 = __importDefault(require("../reducers"));
var middlewares_1 = require("../middlewares");
jest.useFakeTimers();
describe('CallActions', function () {
    var callActions;
    function allActions(state, action) {
        if (state === void 0) { state = []; }
        return __spreadArrays(state, [action]);
    }
    var configureStore = function () { return redux_1.createStore(redux_1.combineReducers(__assign(__assign({}, reducers_1["default"]), { allActions: allActions })), redux_1.applyMiddleware.apply(void 0, middlewares_1.middlewares)); };
    var store;
    beforeEach(function () {
        store = redux_1.createStore(redux_1.combineReducers({ allActions: allActions }), redux_1.applyMiddleware.apply(void 0, middlewares_1.middlewares));
        callActions = redux_1.bindActionCreators(CallActions, store.dispatch);
        SocketActions.handshake.mockReturnValue(jest.fn());
    });
    afterEach(function () {
        jest.runAllTimers();
        socket_1["default"].removeAllListeners();
    });
    describe('init', function () {
        it('dispatches init action when connected', function () { return __awaiter(void 0, void 0, void 0, function () {
            var promise;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        promise = callActions.init();
                        socket_1["default"].emit('connect', undefined);
                        return [4 /*yield*/, promise];
                    case 1:
                        _a.sent();
                        expect(store.getState().allActions.slice(1)).toEqual([{
                                type: constants.NOTIFY,
                                payload: {
                                    id: jasmine.any(String),
                                    message: 'Connected to server socket',
                                    type: 'warning'
                                }
                            }, {
                                type: constants.INIT
                            }]);
                        return [2 /*return*/];
                }
            });
        }); });
        it('calls dispatches disconnect message on disconnect', function () { return __awaiter(void 0, void 0, void 0, function () {
            var promise;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        promise = callActions.init();
                        socket_1["default"].emit('connect', undefined);
                        socket_1["default"].emit('disconnect', undefined);
                        expect(store.getState().allActions.slice(1)).toEqual([{
                                type: constants.NOTIFY,
                                payload: {
                                    id: jasmine.any(String),
                                    message: 'Connected to server socket',
                                    type: 'warning'
                                }
                            }, {
                                type: constants.INIT
                            }, {
                                type: constants.NOTIFY,
                                payload: {
                                    id: jasmine.any(String),
                                    message: 'Server socket disconnected',
                                    type: 'error'
                                }
                            }]);
                        return [4 /*yield*/, promise];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it('dispatches alert when failed to get media stream', function () { return __awaiter(void 0, void 0, void 0, function () {
            var promise;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        promise = callActions.init();
                        socket_1["default"].emit('connect', undefined);
                        return [4 /*yield*/, promise];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FsbEFjdGlvbnMudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGllbnQvYWN0aW9ucy9DYWxsQWN0aW9ucy50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7QUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtBQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUE7QUFFNUIseURBQTRDO0FBQzVDLDZEQUFnRDtBQUNoRCxzREFBeUM7QUFDekMscURBQThCO0FBQzlCLCtCQUFvRztBQUNwRyx5REFBa0M7QUFDbEMsOENBQTRDO0FBRTVDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQTtBQUVwQixRQUFRLENBQUMsYUFBYSxFQUFFO0lBRXRCLElBQUksV0FBK0IsQ0FBQTtJQUVuQyxTQUFTLFVBQVUsQ0FBQyxLQUF1QixFQUFFLE1BQWlCO1FBQTFDLHNCQUFBLEVBQUEsVUFBdUI7UUFDekMsc0JBQVcsS0FBSyxHQUFFLE1BQU0sR0FBQztJQUMzQixDQUFDO0lBRUQsSUFBTSxjQUFjLEdBQUcsY0FBTSxPQUFBLG1CQUFXLENBQ3RDLHVCQUFlLHVCQUFLLHFCQUFRLEtBQUUsVUFBVSxZQUFBLElBQUcsRUFDM0MsdUJBQWUsZUFBSSx5QkFBVyxFQUMvQixFQUg0QixDQUc1QixDQUFBO0lBQ0QsSUFBSSxLQUF3QyxDQUFBO0lBRTVDLFVBQVUsQ0FBQztRQUNULEtBQUssR0FBRyxtQkFBVyxDQUNqQix1QkFBZSxDQUFDLEVBQUUsVUFBVSxZQUFBLEVBQUUsQ0FBQyxFQUMvQix1QkFBZSxlQUFJLHlCQUFXLEVBQy9CLENBQUE7UUFDRCxXQUFXLEdBQUcsMEJBQWtCLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsU0FBdUIsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDbkUsQ0FBQyxDQUFDLENBQUE7SUFFRixTQUFTLENBQUM7UUFDUixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUE7UUFDbkIsbUJBQU0sQ0FBQyxrQkFBa0IsRUFBRSxDQUFBO0lBQzdCLENBQUMsQ0FBQyxDQUFBO0lBRUYsUUFBUSxDQUFDLE1BQU0sRUFBRTtRQUVmLEVBQUUsQ0FBQyx1Q0FBdUMsRUFBRTs7Ozs7d0JBQ3BDLE9BQU8sR0FBRyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUE7d0JBQ2xDLG1CQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQTt3QkFDakMscUJBQU0sT0FBTyxFQUFBOzt3QkFBYixTQUFhLENBQUE7d0JBQ2IsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7Z0NBQ3BELElBQUksRUFBRSxTQUFTLENBQUMsTUFBTTtnQ0FDdEIsT0FBTyxFQUFFO29DQUNQLEVBQUUsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztvQ0FDdkIsT0FBTyxFQUFFLDRCQUE0QjtvQ0FDckMsSUFBSSxFQUFFLFNBQVM7aUNBQ2hCOzZCQUNGLEVBQUU7Z0NBQ0QsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJOzZCQUNyQixDQUFDLENBQUMsQ0FBQTs7OzthQUNKLENBQUMsQ0FBQTtRQUVGLEVBQUUsQ0FBQyxtREFBbUQsRUFBRTs7Ozs7d0JBQ2hELE9BQU8sR0FBRyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUE7d0JBQ2xDLG1CQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQTt3QkFDakMsbUJBQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLFNBQVMsQ0FBQyxDQUFBO3dCQUNwQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQ0FDcEQsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO2dDQUN0QixPQUFPLEVBQUU7b0NBQ1AsRUFBRSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO29DQUN2QixPQUFPLEVBQUUsNEJBQTRCO29DQUNyQyxJQUFJLEVBQUUsU0FBUztpQ0FDaEI7NkJBQ0YsRUFBRTtnQ0FDRCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7NkJBQ3JCLEVBQUU7Z0NBQ0QsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO2dDQUN0QixPQUFPLEVBQUU7b0NBQ1AsRUFBRSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO29DQUN2QixPQUFPLEVBQUUsNEJBQTRCO29DQUNyQyxJQUFJLEVBQUUsT0FBTztpQ0FDZDs2QkFDRixDQUFDLENBQUMsQ0FBQTt3QkFDSCxxQkFBTSxPQUFPLEVBQUE7O3dCQUFiLFNBQWEsQ0FBQTs7OzthQUNkLENBQUMsQ0FBQTtRQUVGLEVBQUUsQ0FBQyxrREFBa0QsRUFBRTs7Ozs7d0JBQy9DLE9BQU8sR0FBRyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUE7d0JBQ2xDLG1CQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQTt3QkFDakMscUJBQU0sT0FBTyxFQUFBOzt3QkFBYixTQUFhLENBQUE7Ozs7YUFDZCxDQUFDLENBQUE7SUFFSixDQUFDLENBQUMsQ0FBQTtBQUVKLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiamVzdC5tb2NrKCcuLi9zb2NrZXQnKVxuamVzdC5tb2NrKCcuLi93aW5kb3cnKVxuamVzdC5tb2NrKCcuL1NvY2tldEFjdGlvbnMnKVxuXG5pbXBvcnQgKiBhcyBDYWxsQWN0aW9ucyBmcm9tICcuL0NhbGxBY3Rpb25zJ1xuaW1wb3J0ICogYXMgU29ja2V0QWN0aW9ucyBmcm9tICcuL1NvY2tldEFjdGlvbnMnXG5pbXBvcnQgKiBhcyBjb25zdGFudHMgZnJvbSAnLi4vY29uc3RhbnRzJ1xuaW1wb3J0IHNvY2tldCBmcm9tICcuLi9zb2NrZXQnXG5pbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMsIGNyZWF0ZVN0b3JlLCBBbnlBY3Rpb24sIGNvbWJpbmVSZWR1Y2VycywgYXBwbHlNaWRkbGV3YXJlIH0gZnJvbSAncmVkdXgnXG5pbXBvcnQgcmVkdWNlcnMgZnJvbSAnLi4vcmVkdWNlcnMnXG5pbXBvcnQgeyBtaWRkbGV3YXJlcyB9IGZyb20gJy4uL21pZGRsZXdhcmVzJ1xuXG5qZXN0LnVzZUZha2VUaW1lcnMoKVxuXG5kZXNjcmliZSgnQ2FsbEFjdGlvbnMnLCAoKSA9PiB7XG5cbiAgbGV0IGNhbGxBY3Rpb25zOiB0eXBlb2YgQ2FsbEFjdGlvbnNcblxuICBmdW5jdGlvbiBhbGxBY3Rpb25zKHN0YXRlOiBBbnlBY3Rpb25bXSA9IFtdLCBhY3Rpb246IEFueUFjdGlvbikge1xuICAgIHJldHVybiBbLi4uc3RhdGUsIGFjdGlvbl1cbiAgfVxuXG4gIGNvbnN0IGNvbmZpZ3VyZVN0b3JlID0gKCkgPT4gY3JlYXRlU3RvcmUoXG4gICAgY29tYmluZVJlZHVjZXJzKHsuLi5yZWR1Y2VycywgYWxsQWN0aW9ucyB9KSxcbiAgICBhcHBseU1pZGRsZXdhcmUoLi4ubWlkZGxld2FyZXMpLFxuICApXG4gIGxldCBzdG9yZTogUmV0dXJuVHlwZTx0eXBlb2YgY29uZmlndXJlU3RvcmU+XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgc3RvcmUgPSBjcmVhdGVTdG9yZShcbiAgICAgIGNvbWJpbmVSZWR1Y2Vycyh7IGFsbEFjdGlvbnMgfSksXG4gICAgICBhcHBseU1pZGRsZXdhcmUoLi4ubWlkZGxld2FyZXMpLFxuICAgIClcbiAgICBjYWxsQWN0aW9ucyA9IGJpbmRBY3Rpb25DcmVhdG9ycyhDYWxsQWN0aW9ucywgc3RvcmUuZGlzcGF0Y2gpO1xuICAgIChTb2NrZXRBY3Rpb25zLmhhbmRzaGFrZSBhcyBqZXN0Lk1vY2spLm1vY2tSZXR1cm5WYWx1ZShqZXN0LmZuKCkpXG4gIH0pXG5cbiAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICBqZXN0LnJ1bkFsbFRpbWVycygpXG4gICAgc29ja2V0LnJlbW92ZUFsbExpc3RlbmVycygpXG4gIH0pXG5cbiAgZGVzY3JpYmUoJ2luaXQnLCAoKSA9PiB7XG5cbiAgICBpdCgnZGlzcGF0Y2hlcyBpbml0IGFjdGlvbiB3aGVuIGNvbm5lY3RlZCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHByb21pc2UgPSBjYWxsQWN0aW9ucy5pbml0KClcbiAgICAgIHNvY2tldC5lbWl0KCdjb25uZWN0JywgdW5kZWZpbmVkKVxuICAgICAgYXdhaXQgcHJvbWlzZVxuICAgICAgZXhwZWN0KHN0b3JlLmdldFN0YXRlKCkuYWxsQWN0aW9ucy5zbGljZSgxKSkudG9FcXVhbChbe1xuICAgICAgICB0eXBlOiBjb25zdGFudHMuTk9USUZZLFxuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgaWQ6IGphc21pbmUuYW55KFN0cmluZyksXG4gICAgICAgICAgbWVzc2FnZTogJ0Nvbm5lY3RlZCB0byBzZXJ2ZXIgc29ja2V0JyxcbiAgICAgICAgICB0eXBlOiAnd2FybmluZycsXG4gICAgICAgIH0sXG4gICAgICB9LCB7XG4gICAgICAgIHR5cGU6IGNvbnN0YW50cy5JTklULFxuICAgICAgfV0pXG4gICAgfSlcblxuICAgIGl0KCdjYWxscyBkaXNwYXRjaGVzIGRpc2Nvbm5lY3QgbWVzc2FnZSBvbiBkaXNjb25uZWN0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcHJvbWlzZSA9IGNhbGxBY3Rpb25zLmluaXQoKVxuICAgICAgc29ja2V0LmVtaXQoJ2Nvbm5lY3QnLCB1bmRlZmluZWQpXG4gICAgICBzb2NrZXQuZW1pdCgnZGlzY29ubmVjdCcsIHVuZGVmaW5lZClcbiAgICAgIGV4cGVjdChzdG9yZS5nZXRTdGF0ZSgpLmFsbEFjdGlvbnMuc2xpY2UoMSkpLnRvRXF1YWwoW3tcbiAgICAgICAgdHlwZTogY29uc3RhbnRzLk5PVElGWSxcbiAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgIGlkOiBqYXNtaW5lLmFueShTdHJpbmcpLFxuICAgICAgICAgIG1lc3NhZ2U6ICdDb25uZWN0ZWQgdG8gc2VydmVyIHNvY2tldCcsXG4gICAgICAgICAgdHlwZTogJ3dhcm5pbmcnLFxuICAgICAgICB9LFxuICAgICAgfSwge1xuICAgICAgICB0eXBlOiBjb25zdGFudHMuSU5JVCxcbiAgICAgIH0sIHtcbiAgICAgICAgdHlwZTogY29uc3RhbnRzLk5PVElGWSxcbiAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgIGlkOiBqYXNtaW5lLmFueShTdHJpbmcpLFxuICAgICAgICAgIG1lc3NhZ2U6ICdTZXJ2ZXIgc29ja2V0IGRpc2Nvbm5lY3RlZCcsXG4gICAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgfSxcbiAgICAgIH1dKVxuICAgICAgYXdhaXQgcHJvbWlzZVxuICAgIH0pXG5cbiAgICBpdCgnZGlzcGF0Y2hlcyBhbGVydCB3aGVuIGZhaWxlZCB0byBnZXQgbWVkaWEgc3RyZWFtJywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcHJvbWlzZSA9IGNhbGxBY3Rpb25zLmluaXQoKVxuICAgICAgc29ja2V0LmVtaXQoJ2Nvbm5lY3QnLCB1bmRlZmluZWQpXG4gICAgICBhd2FpdCBwcm9taXNlXG4gICAgfSlcblxuICB9KVxuXG59KVxuIl19