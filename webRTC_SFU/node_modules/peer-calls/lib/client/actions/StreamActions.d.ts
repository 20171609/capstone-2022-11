export declare type StreamType = 'camera' | 'desktop';
export interface AddStreamPayload {
    userId: string;
    type?: StreamType;
    stream: MediaStream;
}
export interface AddStreamAction {
    type: 'PEER_STREAM_ADD';
    payload: AddStreamPayload;
}
export interface RemoveStreamAction {
    type: 'PEER_STREAM_REMOVE';
    payload: RemoveStreamPayload;
}
export interface RemoveStreamPayload {
    userId: string;
    stream: MediaStream;
}
export interface MinimizeTogglePayload {
    userId: string;
    streamId?: string;
}
export interface MinimizeToggleAction {
    type: 'MINIMIZE_TOGGLE';
    payload: MinimizeTogglePayload;
}
export interface RemoveStreamTrackPayload {
    userId: string;
    stream: MediaStream;
    track: MediaStreamTrack;
}
export interface RemoveStreamTrackAction {
    type: 'PEER_STREAM_TRACK_REMOVE';
    payload: RemoveStreamTrackPayload;
}
export interface AddStreamTrackPayload {
    userId: string;
    stream: MediaStream;
    track: MediaStreamTrack;
}
export interface AddStreamTrackAction {
    type: 'PEER_STREAM_TRACK_ADD';
    payload: AddStreamTrackPayload;
}
export interface UserIdPayload {
    userId: string;
}
export declare const addStream: (payload: AddStreamPayload) => AddStreamAction;
export declare const removeStream: (userId: string, stream: MediaStream) => RemoveStreamAction;
export declare const addTrack: (payload: AddStreamTrackPayload) => AddStreamTrackAction;
export declare const removeTrack: (payload: RemoveStreamTrackPayload) => RemoveStreamTrackAction;
export declare const minimizeToggle: (payload: MinimizeTogglePayload) => MinimizeToggleAction;
export declare type StreamAction = AddStreamAction | RemoveStreamAction | MinimizeToggleAction | RemoveStreamTrackAction | AddStreamTrackAction;
//# sourceMappingURL=StreamActions.d.ts.map