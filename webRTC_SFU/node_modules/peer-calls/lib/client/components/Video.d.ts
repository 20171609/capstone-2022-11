import React, { ReactEventHandler } from 'react';
import { StreamWithURL } from '../reducers/streams';
import { NicknameMessage } from '../actions/PeerActions';
import { WindowState } from '../reducers/windowStates';
import { MinimizeTogglePayload } from '../actions/StreamActions';
export interface VideoProps {
    onMinimizeToggle: (payload: MinimizeTogglePayload) => void;
    onChangeNickname: (message: NicknameMessage) => void;
    nickname: string;
    windowState: WindowState;
    stream?: StreamWithURL;
    userId: string;
    muted: boolean;
    mirrored: boolean;
    play: () => void;
    localUser?: boolean;
}
export default class Video extends React.PureComponent<VideoProps> {
    videoRef: React.RefObject<HTMLVideoElement>;
    static defaultProps: {
        muted: boolean;
        mirrored: boolean;
    };
    handleClick: ReactEventHandler<HTMLVideoElement>;
    componentDidMount(): void;
    componentDidUpdate(): void;
    handleMinimize: () => void;
    handleToggleCover: () => void;
    render(): JSX.Element;
}
//# sourceMappingURL=Video.d.ts.map