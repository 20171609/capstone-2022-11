"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
jest.mock('../window');
var react_1 = __importDefault(require("react"));
var react_dom_1 = __importDefault(require("react-dom"));
var test_utils_1 = __importDefault(require("react-dom/test-utils"));
var Video_1 = __importDefault(require("./Video"));
var window_1 = require("../window");
var constants_1 = require("../constants");
describe('components/Video', function () {
    var play = jest.fn();
    var VideoWrapper = /** @class */ (function (_super) {
        __extends(VideoWrapper, _super);
        function VideoWrapper() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ref = react_1["default"].createRef();
            _this.state = {
                stream: null
            };
            return _this;
        }
        VideoWrapper.prototype.render = function () {
            return react_1["default"].createElement(Video_1["default"], { ref: this.ref, stream: this.state.stream || this.props.stream, onMinimizeToggle: this.props.onMinimizeToggle, play: this.props.play, userId: "test", muted: this.props.muted, mirrored: this.props.mirrored, nickname: this.props.nickname, onChangeNickname: this.props.onChangeNickname, windowState: this.props.windowState });
        };
        return VideoWrapper;
    }(react_1["default"].PureComponent));
    var component;
    var video;
    var onMinimizeToggle;
    var onChangeNickname;
    var mediaStream;
    var url;
    var wrapper;
    var nickname;
    var defaultFlags = {
        muted: false,
        mirrored: false,
        windowState: undefined
    };
    function render(args) {
        return __awaiter(this, void 0, void 0, function () {
            var flags, div;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        nickname = 'john';
                        flags = Object.assign({}, defaultFlags, args);
                        onMinimizeToggle = jest.fn();
                        onChangeNickname = jest.fn();
                        mediaStream = new window_1.MediaStream();
                        div = document.createElement('div');
                        return [4 /*yield*/, new Promise(function (resolve) {
                                var stream = {
                                    stream: mediaStream,
                                    url: url,
                                    type: constants_1.STREAM_TYPE_CAMERA
                                };
                                react_dom_1["default"].render(react_1["default"].createElement(VideoWrapper, { ref: function (instance) { return resolve(instance); }, stream: stream, play: play, userId: "test", muted: flags.muted, mirrored: flags.mirrored, onChangeNickname: onChangeNickname, onMinimizeToggle: onMinimizeToggle, nickname: nickname, windowState: flags.windowState }), div);
                            })];
                    case 1:
                        component = _a.sent();
                        video = test_utils_1["default"].findRenderedComponentWithType(component, Video_1["default"]);
                        wrapper = div.children[0];
                        return [2 /*return*/];
                }
            });
        });
    }
    describe('render', function () {
        it('should not fail', function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, render()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it('Mirrored and widnowState propogate to rendered classes', function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, render({ mirrored: true })];
                    case 1:
                        _a.sent();
                        expect(wrapper.className).toBe('video-container mirrored');
                        return [2 /*return*/];
                }
            });
        }); });
        it('Mirrored and windowState propogate to rendered classes', function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, render({ mirrored: true, windowState: 'minimized' })];
                    case 1:
                        _a.sent();
                        expect(wrapper.className).toBe('video-container minimized mirrored');
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe('componentDidUpdate', function () {
        describe('src', function () {
            beforeEach(function () { return __awaiter(void 0, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, render()];
                        case 1:
                            _a.sent();
                            delete video.videoRef.current.srcObject;
                            return [2 /*return*/];
                    }
                });
            }); });
            it('updates src only when changed', function () {
                mediaStream = new window_1.MediaStream();
                component.setState({
                    stream: {
                        url: 'test',
                        stream: mediaStream,
                        type: constants_1.STREAM_TYPE_CAMERA
                    }
                });
                expect(video.videoRef.current.src).toBe('http://localhost/test');
                component.setState({
                    stream: {
                        url: 'test',
                        stream: mediaStream,
                        type: constants_1.STREAM_TYPE_CAMERA
                    }
                });
            });
            it('updates srcObject only when changed', function () {
                video.videoRef.current.srcObject = null;
                mediaStream = new window_1.MediaStream();
                component.setState({
                    stream: {
                        url: 'test',
                        stream: mediaStream,
                        type: constants_1.STREAM_TYPE_CAMERA
                    }
                });
                expect(video.videoRef.current.srcObject).toBe(mediaStream);
                component.setState({
                    stream: {
                        url: 'test',
                        stream: mediaStream,
                        type: constants_1.STREAM_TYPE_CAMERA
                    }
                });
            });
        });
    });
});
//# sourceMappingURL=data:application/json;base64,