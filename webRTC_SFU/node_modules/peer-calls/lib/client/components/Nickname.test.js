"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var Nickname_1 = require("./Nickname");
var react_1 = __importDefault(require("react"));
var react_dom_1 = __importDefault(require("react-dom"));
var test_utils_1 = __importDefault(require("react-dom/test-utils"));
describe('Nickname', function () {
    // let component: Nickname
    var nickname;
    var onChange;
    var localUser;
    var div;
    function render() {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        nickname = 'john';
                        onChange = jest.fn();
                        div = document.createElement('div');
                        return [4 /*yield*/, new Promise(function (resolve) {
                                react_dom_1["default"].render(react_1["default"].createElement(Nickname_1.Nickname, { ref: function (instance) { return resolve(instance); }, onChange: onChange, value: nickname, localUser: localUser }), div);
                            })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
    afterEach(function () {
        react_dom_1["default"].unmountComponentAtNode(div);
    });
    describe('read-only', function () {
        it('displays static nickname for other users', function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        localUser = undefined;
                        return [4 /*yield*/, render()];
                    case 1:
                        _a.sent();
                        expect(div.children[0].tagName).toBe('SPAN');
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe('editable', function () {
        var input;
        beforeEach(function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        localUser = true;
                        return [4 /*yield*/, render()];
                    case 1:
                        _a.sent();
                        input = div.children[0];
                        expect(input.value).toBe('john');
                        expect(input.tagName).toBe('INPUT');
                        test_utils_1["default"].Simulate.change(input, {
                            target: { value: 'jack' }
                        });
                        expect(input.value).toBe('jack');
                        return [2 /*return*/];
                }
            });
        }); });
        it('edits nickname on blur', function () {
            test_utils_1["default"].Simulate.blur(input);
            expect(onChange.mock.calls).toEqual([[{
                        type: 'nickname',
                        payload: { nickname: 'jack' }
                    }]]);
        });
        describe('keyPress', function () {
            it('blurs (and edits nickname) on enter', function () {
                var blurMock = jest.fn();
                input.blur = blurMock;
                test_utils_1["default"].Simulate.keyPress(input, {
                    key: 'Enter'
                });
                expect(blurMock.mock.calls.length).toBe(1);
            });
            it('does nothing on other keys', function () {
                test_utils_1["default"].Simulate.keyPress(input, {
                    key: 'a'
                });
                expect(onChange.mock.calls).toEqual([]);
            });
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmlja25hbWUudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9OaWNrbmFtZS50ZXN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVDQUFxQztBQUVyQyxnREFBeUI7QUFDekIsd0RBQWdDO0FBQ2hDLG9FQUE0QztBQUU1QyxRQUFRLENBQUMsVUFBVSxFQUFFO0lBRW5CLDBCQUEwQjtJQUMxQixJQUFJLFFBQWdCLENBQUE7SUFDcEIsSUFBSSxRQUFpRSxDQUFBO0lBQ3JFLElBQUksU0FBOEIsQ0FBQTtJQUNsQyxJQUFJLEdBQW1CLENBQUE7SUFFdkIsU0FBZSxNQUFNOzs7Ozt3QkFDbkIsUUFBUSxHQUFHLE1BQU0sQ0FBQTt3QkFDakIsUUFBUSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQTt3QkFFcEIsR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7d0JBQ25DLHFCQUFNLElBQUksT0FBTyxDQUFXLFVBQUEsT0FBTztnQ0FDakMsc0JBQVEsQ0FBQyxNQUFNLENBQ2IsaUNBQUMsbUJBQVEsSUFDUCxHQUFHLEVBQUUsVUFBQSxRQUFRLElBQUksT0FBQSxPQUFPLENBQUMsUUFBUyxDQUFDLEVBQWxCLENBQWtCLEVBQ25DLFFBQVEsRUFBRSxRQUFRLEVBQ2xCLEtBQUssRUFBRSxRQUFRLEVBQ2YsU0FBUyxFQUFFLFNBQVMsR0FDcEIsRUFDRixHQUFHLENBQ0osQ0FBQTs0QkFDSCxDQUFDLENBQUMsRUFBQTs7d0JBVkYsU0FVRSxDQUFBOzs7OztLQUNIO0lBRUQsU0FBUyxDQUFDO1FBQ1Isc0JBQVEsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUN0QyxDQUFDLENBQUMsQ0FBQTtJQUVGLFFBQVEsQ0FBQyxXQUFXLEVBQUU7UUFDcEIsRUFBRSxDQUFDLDBDQUEwQyxFQUFFOzs7O3dCQUM3QyxTQUFTLEdBQUcsU0FBUyxDQUFBO3dCQUNyQixxQkFBTSxNQUFNLEVBQUUsRUFBQTs7d0JBQWQsU0FBYyxDQUFBO3dCQUNkLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTs7OzthQUM3QyxDQUFDLENBQUE7SUFDSixDQUFDLENBQUMsQ0FBQTtJQUVGLFFBQVEsQ0FBQyxVQUFVLEVBQUU7UUFDbkIsSUFBSSxLQUF1QixDQUFBO1FBQzNCLFVBQVUsQ0FBQzs7Ozt3QkFDVCxTQUFTLEdBQUcsSUFBSSxDQUFBO3dCQUNoQixxQkFBTSxNQUFNLEVBQUUsRUFBQTs7d0JBQWQsU0FBYyxDQUFBO3dCQUNkLEtBQUssR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBcUIsQ0FBQTt3QkFDM0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7d0JBQ2hDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO3dCQUNuQyx1QkFBUyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFOzRCQUMvQixNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFO3lCQUNuQixDQUFDLENBQUE7d0JBQ1QsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7Ozs7YUFDakMsQ0FBQyxDQUFBO1FBRUYsRUFBRSxDQUFDLHdCQUF3QixFQUFFO1lBQzNCLHVCQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtZQUM5QixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO3dCQUNwQyxJQUFJLEVBQUUsVUFBVTt3QkFDaEIsT0FBTyxFQUFFLEVBQUMsUUFBUSxFQUFFLE1BQU0sRUFBQztxQkFDNUIsQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQyxDQUFBO1FBRUYsUUFBUSxDQUFDLFVBQVUsRUFBRTtZQUNuQixFQUFFLENBQUMscUNBQXFDLEVBQUU7Z0JBQ3hDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQTtnQkFDMUIsS0FBSyxDQUFDLElBQUksR0FBRyxRQUFRLENBQUE7Z0JBQ3JCLHVCQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUU7b0JBQ2pDLEdBQUcsRUFBRSxPQUFPO2lCQUNiLENBQUMsQ0FBQTtnQkFDRixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQzVDLENBQUMsQ0FBQyxDQUFBO1lBQ0YsRUFBRSxDQUFDLDRCQUE0QixFQUFFO2dCQUMvQix1QkFBUyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO29CQUNqQyxHQUFHLEVBQUUsR0FBRztpQkFDVCxDQUFDLENBQUE7Z0JBQ0YsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ3pDLENBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDLENBQUMsQ0FBQTtBQUVKLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmlja25hbWUgfSBmcm9tICcuL05pY2tuYW1lJ1xuaW1wb3J0IHsgTmlja25hbWVNZXNzYWdlIH0gZnJvbSAnLi4vYWN0aW9ucy9QZWVyQWN0aW9ucydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgVGVzdFV0aWxzIGZyb20gJ3JlYWN0LWRvbS90ZXN0LXV0aWxzJ1xuXG5kZXNjcmliZSgnTmlja25hbWUnLCAoKSA9PiB7XG5cbiAgLy8gbGV0IGNvbXBvbmVudDogTmlja25hbWVcbiAgbGV0IG5pY2tuYW1lOiBzdHJpbmdcbiAgbGV0IG9uQ2hhbmdlOiBqZXN0Lk1vY2tlZEZ1bmN0aW9uPChtZXNzYWdlOiBOaWNrbmFtZU1lc3NhZ2UpID0+IHZvaWQ+XG4gIGxldCBsb2NhbFVzZXI6IGJvb2xlYW4gfCB1bmRlZmluZWRcbiAgbGV0IGRpdjogSFRNTERpdkVsZW1lbnRcblxuICBhc3luYyBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgbmlja25hbWUgPSAnam9obidcbiAgICBvbkNoYW5nZSA9IGplc3QuZm4oKVxuXG4gICAgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBhd2FpdCBuZXcgUHJvbWlzZTxOaWNrbmFtZT4ocmVzb2x2ZSA9PiB7XG4gICAgICBSZWFjdERPTS5yZW5kZXIoXG4gICAgICAgIDxOaWNrbmFtZVxuICAgICAgICAgIHJlZj17aW5zdGFuY2UgPT4gcmVzb2x2ZShpbnN0YW5jZSEpfVxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICB2YWx1ZT17bmlja25hbWV9XG4gICAgICAgICAgbG9jYWxVc2VyPXtsb2NhbFVzZXJ9XG4gICAgICAgIC8+LFxuICAgICAgICBkaXYsXG4gICAgICApXG4gICAgfSlcbiAgfVxuXG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgUmVhY3RET00udW5tb3VudENvbXBvbmVudEF0Tm9kZShkaXYpXG4gIH0pXG5cbiAgZGVzY3JpYmUoJ3JlYWQtb25seScsICgpID0+IHtcbiAgICBpdCgnZGlzcGxheXMgc3RhdGljIG5pY2tuYW1lIGZvciBvdGhlciB1c2VycycsIGFzeW5jICgpID0+IHtcbiAgICAgIGxvY2FsVXNlciA9IHVuZGVmaW5lZFxuICAgICAgYXdhaXQgcmVuZGVyKClcbiAgICAgIGV4cGVjdChkaXYuY2hpbGRyZW5bMF0udGFnTmFtZSkudG9CZSgnU1BBTicpXG4gICAgfSlcbiAgfSlcblxuICBkZXNjcmliZSgnZWRpdGFibGUnLCAoKSA9PiB7XG4gICAgbGV0IGlucHV0OiBIVE1MSW5wdXRFbGVtZW50XG4gICAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiB7XG4gICAgICBsb2NhbFVzZXIgPSB0cnVlXG4gICAgICBhd2FpdCByZW5kZXIoKVxuICAgICAgaW5wdXQgPSBkaXYuY2hpbGRyZW5bMF0gYXMgSFRNTElucHV0RWxlbWVudFxuICAgICAgZXhwZWN0KGlucHV0LnZhbHVlKS50b0JlKCdqb2huJylcbiAgICAgIGV4cGVjdChpbnB1dC50YWdOYW1lKS50b0JlKCdJTlBVVCcpXG4gICAgICBUZXN0VXRpbHMuU2ltdWxhdGUuY2hhbmdlKGlucHV0LCB7XG4gICAgICAgIHRhcmdldDogeyB2YWx1ZTogJ2phY2snIH0sXG4gICAgICB9IGFzIGFueSlcbiAgICAgIGV4cGVjdChpbnB1dC52YWx1ZSkudG9CZSgnamFjaycpXG4gICAgfSlcblxuICAgIGl0KCdlZGl0cyBuaWNrbmFtZSBvbiBibHVyJywgKCkgPT4ge1xuICAgICAgVGVzdFV0aWxzLlNpbXVsYXRlLmJsdXIoaW5wdXQpXG4gICAgICBleHBlY3Qob25DaGFuZ2UubW9jay5jYWxscykudG9FcXVhbChbW3tcbiAgICAgICAgdHlwZTogJ25pY2tuYW1lJyxcbiAgICAgICAgcGF5bG9hZDoge25pY2tuYW1lOiAnamFjayd9LFxuICAgICAgfV1dKVxuICAgIH0pXG5cbiAgICBkZXNjcmliZSgna2V5UHJlc3MnLCAoKSA9PiB7XG4gICAgICBpdCgnYmx1cnMgKGFuZCBlZGl0cyBuaWNrbmFtZSkgb24gZW50ZXInLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGJsdXJNb2NrID0gamVzdC5mbigpXG4gICAgICAgIGlucHV0LmJsdXIgPSBibHVyTW9ja1xuICAgICAgICBUZXN0VXRpbHMuU2ltdWxhdGUua2V5UHJlc3MoaW5wdXQsIHtcbiAgICAgICAgICBrZXk6ICdFbnRlcicsXG4gICAgICAgIH0pXG4gICAgICAgIGV4cGVjdChibHVyTW9jay5tb2NrLmNhbGxzLmxlbmd0aCkudG9CZSgxKVxuICAgICAgfSlcbiAgICAgIGl0KCdkb2VzIG5vdGhpbmcgb24gb3RoZXIga2V5cycsICgpID0+IHtcbiAgICAgICAgVGVzdFV0aWxzLlNpbXVsYXRlLmtleVByZXNzKGlucHV0LCB7XG4gICAgICAgICAga2V5OiAnYScsXG4gICAgICAgIH0pXG4gICAgICAgIGV4cGVjdChvbkNoYW5nZS5tb2NrLmNhbGxzKS50b0VxdWFsKFtdKVxuICAgICAgfSlcbiAgICB9KVxuICB9KVxuXG59KVxuIl19