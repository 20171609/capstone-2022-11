import React from 'react';
import { removeStream } from '../actions/StreamActions';
import { getDesktopStream } from '../actions/MediaActions';
import { StreamWithURL } from '../reducers/streams';
import { DialState } from '../constants';
export interface ToolbarProps {
    dialState: DialState;
    messagesCount: number;
    stream: StreamWithURL;
    desktopStream: StreamWithURL | undefined;
    onToggleChat: () => void;
    onGetDesktopStream: typeof getDesktopStream;
    onRemoveStream: typeof removeStream;
    onSendFile: (file: File) => void;
    onHangup: () => void;
    chatVisible: boolean;
}
export interface ToolbarState {
    readMessages: number;
    camDisabled: boolean;
    micMuted: boolean;
    fullScreenEnabled: boolean;
}
export interface ToolbarButtonProps {
    className?: string;
    badge?: string | number;
    blink?: boolean;
    onClick: () => void;
    icon: string;
    offIcon?: string;
    on?: boolean;
    title: string;
}
export default class Toolbar extends React.PureComponent<ToolbarProps, ToolbarState> {
    file: React.RefObject<HTMLInputElement>;
    constructor(props: ToolbarProps);
    handleMicClick: () => void;
    handleCamClick: () => void;
    handleFullscreenClick: () => void;
    handleHangoutClick: () => void;
    handleSendFile: () => void;
    handleSelectFiles: (event: React.ChangeEvent<HTMLInputElement>) => void;
    handleToggleChat: () => void;
    handleToggleShareDesktop: () => void;
    render(): JSX.Element;
}
//# sourceMappingURL=Toolbar.d.ts.map