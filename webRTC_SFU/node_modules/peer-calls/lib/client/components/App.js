"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
exports.__esModule = true;
var classnames_1 = __importDefault(require("classnames"));
var forEach_1 = __importDefault(require("lodash/forEach"));
var keyBy_1 = __importDefault(require("lodash/keyBy"));
var react_1 = __importDefault(require("react"));
var constants = __importStar(require("../constants"));
var Chat_1 = __importDefault(require("./Chat"));
var Media_1 = require("./Media");
var Notifications_1 = __importDefault(require("./Notifications"));
var Side_1 = require("./Side");
var Toolbar_1 = __importDefault(require("./Toolbar"));
var Videos_1 = __importDefault(require("./Videos"));
var App = /** @class */ (function (_super) {
    __extends(App, _super);
    function App() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            chatVisible: false
        };
        _this.handleShowChat = function () {
            _this.setState({
                chatVisible: true
            });
        };
        _this.handleHideChat = function () {
            _this.setState({
                chatVisible: false
            });
        };
        _this.handleToggleChat = function () {
            return _this.state.chatVisible
                ? _this.handleHideChat()
                : _this.handleShowChat();
        };
        _this.onHangup = function () {
            var localStreams = _this.getLocalStreams();
            forEach_1["default"](localStreams, function (s) {
                _this.props.removeStream(constants.ME, s.stream);
            });
            _this.props.hangUp();
        };
        return _this;
    }
    App.prototype.componentDidMount = function () {
        var init = this.props.init;
        init();
    };
    App.prototype.getLocalStreams = function () {
        var ls = this.props.streams[constants.ME];
        return ls ? keyBy_1["default"](ls.streams, 'type') : {};
    };
    App.prototype.render = function () {
        var _a = this.props, dismissNotification = _a.dismissNotification, notifications = _a.notifications, nicknames = _a.nicknames, messages = _a.messages, messagesCount = _a.messagesCount, onSendFile = _a.onSendFile, sendMessage = _a.sendMessage;
        var chatVisibleClassName = classnames_1["default"]({
            'chat-visible': this.state.chatVisible
        });
        var localStreams = this.getLocalStreams();
        return (react_1["default"].createElement("div", { className: "app" },
            react_1["default"].createElement(Side_1.Side, { align: 'flex-end', left: true, zIndex: 2 },
                react_1["default"].createElement(Toolbar_1["default"], { chatVisible: this.state.chatVisible, dialState: this.props.dialState, messagesCount: messagesCount, onToggleChat: this.handleToggleChat, onSendFile: onSendFile, onHangup: this.onHangup, stream: localStreams[constants.STREAM_TYPE_CAMERA], desktopStream: localStreams[constants.STREAM_TYPE_DESKTOP], onGetDesktopStream: this.props.getDesktopStream, onRemoveStream: this.props.removeStream })),
            react_1["default"].createElement(Side_1.Side, { className: chatVisibleClassName, top: true, zIndex: 1 },
                react_1["default"].createElement(Notifications_1["default"], { dismiss: dismissNotification, notifications: notifications }),
                react_1["default"].createElement(Media_1.Media, null)),
            react_1["default"].createElement(Chat_1["default"], { messages: messages, nicknames: nicknames, onClose: this.handleHideChat, sendMessage: sendMessage, visible: this.state.chatVisible }),
            react_1["default"].createElement(Videos_1["default"], { onChangeNickname: sendMessage, onMinimizeToggle: this.props.minimizeToggle, streams: this.props.streams, play: this.props.play, nicknames: this.props.nicknames, peers: this.props.peers, windowStates: this.props.windowStates })));
    };
    return App;
}(react_1["default"].PureComponent));
exports["default"] = App;
//# sourceMappingURL=data:application/json;base64,