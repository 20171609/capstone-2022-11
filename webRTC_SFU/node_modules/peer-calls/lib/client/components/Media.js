"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var MediaActions_1 = require("../actions/MediaActions");
var Alerts_1 = require("./Alerts");
var NotifyActions_1 = require("../actions/NotifyActions");
var constants_1 = require("../constants");
var CallActions_1 = require("../actions/CallActions");
var NicknameActions_1 = require("../actions/NicknameActions");
function mapStateToProps(state) {
    return __assign(__assign({}, state.media), { nickname: state.nicknames[constants_1.ME], visible: state.media.dialState === constants_1.DIAL_STATE_HUNG_UP });
}
var mapDispatchToProps = {
    enumerateDevices: MediaActions_1.enumerateDevices,
    dial: CallActions_1.dial,
    onSetVideoConstraint: MediaActions_1.setVideoConstraint,
    onSetAudioConstraint: MediaActions_1.setAudioConstraint,
    onSetNickname: NicknameActions_1.setNickname,
    getMediaStream: MediaActions_1.getMediaStream,
    play: MediaActions_1.play,
    logInfo: NotifyActions_1.info,
    logWarning: NotifyActions_1.warning,
    logError: NotifyActions_1.error
};
var c = react_redux_1.connect(mapStateToProps, mapDispatchToProps);
var MediaForm = /** @class */ (function (_super) {
    __extends(MediaForm, _super);
    function MediaForm() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleSubmit = function (event) { return __awaiter(_this, void 0, void 0, function () {
            var props, audio, video, err_1, err_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        event.preventDefault();
                        props = this.props;
                        audio = props.audio, video = props.video;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, props.getMediaStream({ audio: audio, video: video })];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _a.sent();
                        props.logError('Error getting media stream: {0}', err_1);
                        return [3 /*break*/, 4];
                    case 4:
                        props.logInfo('Dialling...');
                        _a.label = 5;
                    case 5:
                        _a.trys.push([5, 7, , 8]);
                        return [4 /*yield*/, props.dial()];
                    case 6:
                        _a.sent();
                        return [3 /*break*/, 8];
                    case 7:
                        err_2 = _a.sent();
                        props.logError('Error dialling: {0}', err_2);
                        return [3 /*break*/, 8];
                    case 8: return [2 /*return*/];
                }
            });
        }); };
        _this.handleVideoChange = function (event) {
            var constraint = JSON.parse(event.target.value);
            _this.props.onSetVideoConstraint(constraint);
        };
        _this.handleAudioChange = function (event) {
            var constraint = JSON.parse(event.target.value);
            _this.props.onSetAudioConstraint(constraint);
        };
        _this.handleNicknameChange = function (event) {
            _this.props.onSetNickname({
                nickname: event.target.value,
                userId: constants_1.ME
            });
        };
        return _this;
    }
    MediaForm.prototype.componentDidMount = function () {
        this.props.enumerateDevices();
    };
    MediaForm.prototype.render = function () {
        var props = this.props;
        if (!props.visible) {
            return null;
        }
        var videoId = JSON.stringify(props.video);
        var audioId = JSON.stringify(props.audio);
        return (react_1["default"].createElement("form", { className: 'media', onSubmit: this.handleSubmit },
            react_1["default"].createElement("input", { required: true, name: 'nickname', type: 'text', placeholder: 'Nickname', onChange: this.handleNicknameChange, value: props.nickname }),
            react_1["default"].createElement("select", { name: 'video-input', onChange: this.handleVideoChange, value: videoId },
                react_1["default"].createElement(Options, { devices: props.devices, "default": '{"facingMode":"user"}', type: 'videoinput' })),
            react_1["default"].createElement("select", { name: 'audio-input', onChange: this.handleAudioChange, value: audioId },
                react_1["default"].createElement(Options, { devices: props.devices, "default": 'true', type: 'audioinput' })),
            react_1["default"].createElement("button", { type: 'submit' }, "Join Call")));
    };
    return MediaForm;
}(react_1["default"].PureComponent));
exports.MediaForm = MediaForm;
exports.AutoplayMessage = react_1["default"].memo(function Autoplay(props) {
    return (react_1["default"].createElement(react_1["default"].Fragment, null,
        "Your browser has blocked video autoplay on this page. To continue with your call, please press the play button: \u00A0",
        react_1["default"].createElement("button", { className: 'button', onClick: props.play }, "Play")));
});
exports.Media = c(react_1["default"].memo(function Media(props) {
    return (react_1["default"].createElement("div", { className: 'media-container' },
        react_1["default"].createElement(Alerts_1.Alerts, null, props.autoplayError && (react_1["default"].createElement(Alerts_1.Alert, null,
            react_1["default"].createElement(exports.AutoplayMessage, { play: props.play })))),
        react_1["default"].createElement(MediaForm, __assign({}, props))));
}));
var labels = {
    audioinput: 'Audio',
    videoinput: 'Video'
};
function Options(props) {
    var label = labels[props.type];
    return (react_1["default"].createElement(react_1["default"].Fragment, null,
        react_1["default"].createElement("option", { value: 'false' },
            "No ",
            label),
        react_1["default"].createElement("option", { value: props["default"] },
            "Default ",
            label),
        props.devices
            .filter(function (device) { return device.type === props.type; })
            .map(function (device) {
            return react_1["default"].createElement("option", { key: device.id, value: JSON.stringify({ deviceId: device.id }) }, device.name || device.type);
        })));
}
//# sourceMappingURL=data:application/json;base64,