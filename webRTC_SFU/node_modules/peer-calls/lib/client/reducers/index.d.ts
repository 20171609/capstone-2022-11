/// <reference types="simple-peer" />
declare const _default: import("redux").Reducer<import("redux").CombinedState<{
    notifications: Record<string, import("../actions/NotifyActions").Notification>;
    messages: import("./messages").MessagesState;
    media: import("./media").MediaState;
    nicknames: Record<string, string | undefined>;
    peers: Record<string, import("simple-peer").Instance>;
    streams: import("./streams").StreamsState;
    windowStates: import("./windowStates").WindowStates;
}>, import("redux").AnyAction | import("../actions/StreamActions").AddStreamAction | import("../actions/StreamActions").RemoveStreamAction | import("../actions/StreamActions").MinimizeToggleAction | import("../actions/StreamActions").RemoveStreamTrackAction | import("../actions/StreamActions").AddStreamTrackAction | import("../actions/NotifyActions").NotificationAddAction | import("../actions/ChatActions").MessageAddAction | import("../actions/NicknameActions").NicknameSetAction | import("../actions/PeerActions").RemovePeerAction | import("../actions/PeerActions").AddPeerAction | import("../actions/MediaActions").MediaVideoConstraintAction | import("../actions/MediaActions").MediaAudioConstraintAction | import("../async").PendingAction<"MEDIA_ENUMERATE", import("../actions/MediaActions").MediaDevice[]> | import("../async").ResolvedAction<"MEDIA_ENUMERATE", import("../actions/MediaActions").MediaDevice[]> | import("../async").RejectedAction<"MEDIA_ENUMERATE"> | import("../async").PendingAction<"MEDIA_STREAM", import("../actions/StreamActions").AddStreamPayload> | import("../async").ResolvedAction<"MEDIA_STREAM", import("../actions/StreamActions").AddStreamPayload> | import("../async").RejectedAction<"MEDIA_STREAM"> | import("../async").PendingAction<"MEDIA_PLAY", void> | import("../async").ResolvedAction<"MEDIA_PLAY", void> | import("../async").RejectedAction<"MEDIA_PLAY"> | import("../async").PendingAction<"DIAL", void> | import("../async").ResolvedAction<"DIAL", void> | import("../async").RejectedAction<"DIAL"> | import("../actions/CallActions").HangUpAction>;
export default _default;
//# sourceMappingURL=index.d.ts.map