"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
var config_1 = require("../../server/config");
function checkTURNServer(turnConfig, timeoutDuration) {
    if (timeoutDuration === void 0) { timeoutDuration = 5000; }
    return __awaiter(this, void 0, void 0, function () {
        function start() {
            return __awaiter(this, void 0, void 0, function () {
                var PeerConnection, pc, sdp;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            PeerConnection = window.RTCPeerConnection ||
                                window.mozRTCPeerConnection ||
                                window.webkitRTCPeerConnection;
                            pc = new PeerConnection({ iceServers: [turnConfig] });
                            // create a bogus data channel
                            pc.createDataChannel('');
                            return [4 /*yield*/, pc.createOffer()
                                // sometimes sdp contains the ice candidates...
                            ];
                        case 1:
                            sdp = _a.sent();
                            // sometimes sdp contains the ice candidates...
                            if (sdp.sdp.indexOf('typ relay') > -1) {
                                return [2 /*return*/, true];
                            }
                            pc.setLocalDescription(sdp);
                            return [2 /*return*/, new Promise(function (resolve) {
                                    pc.onicecandidate = function (ice) {
                                        if (!ice ||
                                            !ice.candidate ||
                                            !ice.candidate.candidate ||
                                            !(ice.candidate.candidate.indexOf('typ relay') > -1)) {
                                            return;
                                        }
                                        resolve(true);
                                    };
                                })];
                    }
                });
            });
        }
        var timeout;
        return __generator(this, function (_a) {
            console.log('checking turn server', turnConfig);
            timeout = new Promise(function (resolve, reject) {
                setTimeout(function () {
                    reject(new Error('timed out'));
                }, timeoutDuration);
            });
            return [2 /*return*/, Promise.race([timeout, start()])];
        });
    });
}
checkTURNServer(config_1.config.iceServers[0], 10000)
    .then(console.log.bind(console))["catch"](console.error.bind(console));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2xpZW50L2RlYnVnL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXVEO0FBRXZELFNBQWUsZUFBZSxDQUFFLFVBQXFCLEVBQUUsZUFBc0I7SUFBdEIsZ0NBQUEsRUFBQSxzQkFBc0I7O1FBUzNFLFNBQWUsS0FBSzs7Ozs7OzRCQUNaLGNBQWMsR0FBRyxNQUFNLENBQUMsaUJBQWlCO2dDQUUzQyxNQUNELENBQUMsb0JBQW9CO2dDQUN0QixNQUFNLENBQUMsdUJBQXVCLENBQUE7NEJBRTFCLEVBQUUsR0FBRyxJQUFJLGNBQWMsQ0FBQyxFQUFFLFVBQVUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQTs0QkFFM0QsOEJBQThCOzRCQUM5QixFQUFFLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLENBQUE7NEJBQ1oscUJBQU0sRUFBRSxDQUFDLFdBQVcsRUFBRTtnQ0FDbEMsK0NBQStDOzhCQURiOzs0QkFBNUIsR0FBRyxHQUFHLFNBQXNCOzRCQUNsQywrQ0FBK0M7NEJBQy9DLElBQUksR0FBRyxDQUFDLEdBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7Z0NBQ3RDLHNCQUFPLElBQUksRUFBQTs2QkFDWjs0QkFDRCxFQUFFLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUE7NEJBRTNCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTztvQ0FDeEIsRUFBRSxDQUFDLGNBQWMsR0FBRyxVQUFVLEdBQUc7d0NBQy9CLElBQUksQ0FBQyxHQUFHOzRDQUNKLENBQUMsR0FBRyxDQUFDLFNBQVM7NENBQ2QsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLFNBQVM7NENBQ3hCLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTs0Q0FDeEQsT0FBTTt5Q0FDUDt3Q0FDRCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7b0NBQ2YsQ0FBQyxDQUFBO2dDQUNILENBQUMsQ0FBQyxFQUFBOzs7O1NBQ0g7OztZQXJDRCxPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixFQUFFLFVBQVUsQ0FBQyxDQUFBO1lBRXpDLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBVSxVQUFDLE9BQU8sRUFBRSxNQUFNO2dCQUNuRCxVQUFVLENBQUM7b0JBQ1QsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUE7Z0JBQ2hDLENBQUMsRUFBRSxlQUFlLENBQUMsQ0FBQTtZQUNyQixDQUFDLENBQUMsQ0FBQTtZQWlDRixzQkFBTyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFFLENBQUMsRUFBQTs7O0NBQzFDO0FBRUQsZUFBZSxDQUFDLGVBQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO0tBQzNDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUMvQixPQUFLLENBQUEsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlnLCBJQ0VTZXJ2ZXIgfSBmcm9tICcuLi8uLi9zZXJ2ZXIvY29uZmlnJ1xuXG5hc3luYyBmdW5jdGlvbiBjaGVja1RVUk5TZXJ2ZXIgKHR1cm5Db25maWc6IElDRVNlcnZlciwgdGltZW91dER1cmF0aW9uID0gNTAwMCkge1xuICBjb25zb2xlLmxvZygnY2hlY2tpbmcgdHVybiBzZXJ2ZXInLCB0dXJuQ29uZmlnKVxuXG4gIGNvbnN0IHRpbWVvdXQgPSBuZXcgUHJvbWlzZTx1bmtub3duPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKCd0aW1lZCBvdXQnKSlcbiAgICB9LCB0aW1lb3V0RHVyYXRpb24pXG4gIH0pXG5cbiAgYXN5bmMgZnVuY3Rpb24gc3RhcnQoKSB7XG4gICAgY29uc3QgUGVlckNvbm5lY3Rpb24gPSB3aW5kb3cuUlRDUGVlckNvbm5lY3Rpb24gfHxcbiAgICAgIChcbiAgICAgICAgd2luZG93IGFzIHVua25vd24gYXMgeyBtb3pSVENQZWVyQ29ubmVjdGlvbjogUlRDUGVlckNvbm5lY3Rpb24gfVxuICAgICAgKS5tb3pSVENQZWVyQ29ubmVjdGlvbnx8XG4gICAgICB3aW5kb3cud2Via2l0UlRDUGVlckNvbm5lY3Rpb25cblxuICAgIGNvbnN0IHBjID0gbmV3IFBlZXJDb25uZWN0aW9uKHsgaWNlU2VydmVyczogW3R1cm5Db25maWddIH0pXG5cbiAgICAvLyBjcmVhdGUgYSBib2d1cyBkYXRhIGNoYW5uZWxcbiAgICBwYy5jcmVhdGVEYXRhQ2hhbm5lbCgnJylcbiAgICBjb25zdCBzZHAgPSBhd2FpdCBwYy5jcmVhdGVPZmZlcigpXG4gICAgLy8gc29tZXRpbWVzIHNkcCBjb250YWlucyB0aGUgaWNlIGNhbmRpZGF0ZXMuLi5cbiAgICBpZiAoc2RwLnNkcCEuaW5kZXhPZigndHlwIHJlbGF5JykgPiAtMSkge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgcGMuc2V0TG9jYWxEZXNjcmlwdGlvbihzZHApXG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBwYy5vbmljZWNhbmRpZGF0ZSA9IGZ1bmN0aW9uIChpY2UpIHtcbiAgICAgICAgaWYgKCFpY2UgfHxcbiAgICAgICAgICAgICFpY2UuY2FuZGlkYXRlIHx8XG4gICAgICAgICAgICAhaWNlLmNhbmRpZGF0ZS5jYW5kaWRhdGUgfHxcbiAgICAgICAgICAgICEoaWNlLmNhbmRpZGF0ZS5jYW5kaWRhdGUuaW5kZXhPZigndHlwIHJlbGF5JykgPiAtMSkpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICByZXNvbHZlKHRydWUpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiBQcm9taXNlLnJhY2UoWyB0aW1lb3V0LCBzdGFydCgpIF0pXG59XG5cbmNoZWNrVFVSTlNlcnZlcihjb25maWcuaWNlU2VydmVyc1swXSwgMTAwMDApXG4udGhlbihjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpKVxuLmNhdGNoKGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlKSlcbiJdfQ==