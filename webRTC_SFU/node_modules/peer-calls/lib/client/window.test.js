"use strict";
exports.__esModule = true;
var window_1 = require("./window");
describe('window', function () {
    describe('navigator', function () {
        it('exposes window.navigator', function () {
            expect(navigator).toBe(window.navigator);
        });
    });
    describe('createObjectURL', function () {
        it('calls window.URL.createObjectURL', function () {
            window.URL.createObjectURL = jest.fn().mockReturnValue('test');
            expect(window_1.createObjectURL('bla')).toBe('test');
        });
    });
    describe('createObjectURL', function () {
        it('calls window.URL.revokeObjectURL', function () {
            window.URL.revokeObjectURL = jest.fn();
            expect(window_1.revokeObjectURL('bla')).toBe(undefined);
        });
    });
    describe('valueOf', function () {
        var input;
        beforeEach(function () {
            input = window.document.createElement('input');
            input.setAttribute('id', 'my-main-id');
            input.value = 'test';
            window.document.body.appendChild(input);
        });
        afterEach(function () {
            window.document.body.removeChild(input);
        });
        it('should return value of input', function () {
            expect(window_1.valueOf('my-main-id')).toEqual('test');
        });
        it('does not fail when not found', function () {
            expect(window_1.valueOf('my-main-id2')).toEqual(null);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xpZW50L3dpbmRvdy50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUNBQW9FO0FBRXBFLFFBQVEsQ0FBQyxRQUFRLEVBQUU7SUFFakIsUUFBUSxDQUFDLFdBQVcsRUFBRTtRQUVwQixFQUFFLENBQUMsMEJBQTBCLEVBQUU7WUFDN0IsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDMUMsQ0FBQyxDQUFDLENBQUE7SUFFSixDQUFDLENBQUMsQ0FBQTtJQUVGLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRTtRQUUxQixFQUFFLENBQUMsa0NBQWtDLEVBQUU7WUFDckMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUM5RCxNQUFNLENBQUMsd0JBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUM3QyxDQUFDLENBQUMsQ0FBQTtJQUVKLENBQUMsQ0FBQyxDQUFBO0lBRUYsUUFBUSxDQUFDLGlCQUFpQixFQUFFO1FBRTFCLEVBQUUsQ0FBQyxrQ0FBa0MsRUFBRTtZQUNyQyxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUE7WUFDdEMsTUFBTSxDQUFDLHdCQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDaEQsQ0FBQyxDQUFDLENBQUE7SUFFSixDQUFDLENBQUMsQ0FBQTtJQUVGLFFBQVEsQ0FBQyxTQUFTLEVBQUU7UUFFbEIsSUFBSSxLQUF1QixDQUFBO1FBQzNCLFVBQVUsQ0FBQztZQUNULEtBQUssR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQTtZQUM5QyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxZQUFZLENBQUMsQ0FBQTtZQUN0QyxLQUFLLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQTtZQUNwQixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDekMsQ0FBQyxDQUFDLENBQUE7UUFDRixTQUFTLENBQUM7WUFDUixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDekMsQ0FBQyxDQUFDLENBQUE7UUFFRixFQUFFLENBQUMsOEJBQThCLEVBQUU7WUFDakMsTUFBTSxDQUFDLGdCQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDL0MsQ0FBQyxDQUFDLENBQUE7UUFFRixFQUFFLENBQUMsOEJBQThCLEVBQUU7WUFDakMsTUFBTSxDQUFDLGdCQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDOUMsQ0FBQyxDQUFDLENBQUE7SUFFSixDQUFDLENBQUMsQ0FBQTtBQUVKLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlT2JqZWN0VVJMLCByZXZva2VPYmplY3RVUkwsIHZhbHVlT2YgfSBmcm9tICcuL3dpbmRvdydcblxuZGVzY3JpYmUoJ3dpbmRvdycsICgpID0+IHtcblxuICBkZXNjcmliZSgnbmF2aWdhdG9yJywgKCkgPT4ge1xuXG4gICAgaXQoJ2V4cG9zZXMgd2luZG93Lm5hdmlnYXRvcicsICgpID0+IHtcbiAgICAgIGV4cGVjdChuYXZpZ2F0b3IpLnRvQmUod2luZG93Lm5hdmlnYXRvcilcbiAgICB9KVxuXG4gIH0pXG5cbiAgZGVzY3JpYmUoJ2NyZWF0ZU9iamVjdFVSTCcsICgpID0+IHtcblxuICAgIGl0KCdjYWxscyB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTCcsICgpID0+IHtcbiAgICAgIHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMID0gamVzdC5mbigpLm1vY2tSZXR1cm5WYWx1ZSgndGVzdCcpXG4gICAgICBleHBlY3QoY3JlYXRlT2JqZWN0VVJMKCdibGEnKSkudG9CZSgndGVzdCcpXG4gICAgfSlcblxuICB9KVxuXG4gIGRlc2NyaWJlKCdjcmVhdGVPYmplY3RVUkwnLCAoKSA9PiB7XG5cbiAgICBpdCgnY2FsbHMgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwnLCAoKSA9PiB7XG4gICAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTCA9IGplc3QuZm4oKVxuICAgICAgZXhwZWN0KHJldm9rZU9iamVjdFVSTCgnYmxhJykpLnRvQmUodW5kZWZpbmVkKVxuICAgIH0pXG5cbiAgfSlcblxuICBkZXNjcmliZSgndmFsdWVPZicsICgpID0+IHtcblxuICAgIGxldCBpbnB1dDogSFRNTElucHV0RWxlbWVudFxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgaW5wdXQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKVxuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICdteS1tYWluLWlkJylcbiAgICAgIGlucHV0LnZhbHVlID0gJ3Rlc3QnXG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnB1dClcbiAgICB9KVxuICAgIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChpbnB1dClcbiAgICB9KVxuXG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gdmFsdWUgb2YgaW5wdXQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QodmFsdWVPZignbXktbWFpbi1pZCcpKS50b0VxdWFsKCd0ZXN0JylcbiAgICB9KVxuXG4gICAgaXQoJ2RvZXMgbm90IGZhaWwgd2hlbiBub3QgZm91bmQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QodmFsdWVPZignbXktbWFpbi1pZDInKSkudG9FcXVhbChudWxsKVxuICAgIH0pXG5cbiAgfSlcblxufSlcbiJdfQ==