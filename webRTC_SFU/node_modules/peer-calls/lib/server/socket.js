'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var debug_1 = __importDefault(require("debug"));
var debug = debug_1["default"]('peercalls:socket');
function handleSocket(socket, io, stores) {
    var _this = this;
    socket.once('disconnect', function () { return __awaiter(_this, void 0, void 0, function () {
        var userId;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, stores.userIdBySocketId.get(socket.id)];
                case 1:
                    userId = _a.sent();
                    if (!userId) return [3 /*break*/, 3];
                    return [4 /*yield*/, Promise.all([
                            stores.userIdBySocketId.remove(socket.id),
                            stores.socketIdByUserId.remove(userId),
                        ])];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    }); });
    socket.on('signal', function (payload) { return __awaiter(_this, void 0, void 0, function () {
        var socketId, userId;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, stores.socketIdByUserId.get(payload.userId)];
                case 1:
                    socketId = _a.sent();
                    return [4 /*yield*/, stores.userIdBySocketId.get(socket.id)];
                case 2:
                    userId = _a.sent();
                    if (socketId) {
                        io.to(socketId).emit('signal', {
                            userId: userId,
                            signal: payload.signal
                        });
                    }
                    return [2 /*return*/];
            }
        });
    }); });
    socket.on('ready', function (payload) { return __awaiter(_this, void 0, void 0, function () {
        var userId, room, users;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    userId = payload.userId, room = payload.room;
                    debug('ready: %s, room: %s', userId, room);
                    // no need to leave rooms because there will be only one room for the
                    // duration of the socket connection
                    return [4 /*yield*/, Promise.all([
                            stores.socketIdByUserId.set(userId, socket.id),
                            stores.userIdBySocketId.set(socket.id, userId),
                        ])];
                case 1:
                    // no need to leave rooms because there will be only one room for the
                    // duration of the socket connection
                    _a.sent();
                    socket.join(room);
                    return [4 /*yield*/, getUsers(room)];
                case 2:
                    users = _a.sent();
                    debug('ready: %s, room: %s, users: %o', userId, room, users);
                    io.to(room).emit('users', {
                        initiator: userId,
                        users: users
                    });
                    return [2 /*return*/];
            }
        });
    }); });
    function getUsers(room) {
        return __awaiter(this, void 0, void 0, function () {
            var socketIds, userIds;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, getClientsInRoom(room)];
                    case 1:
                        socketIds = _a.sent();
                        return [4 /*yield*/, stores.userIdBySocketId.getMany(socketIds)];
                    case 2:
                        userIds = _a.sent();
                        return [2 /*return*/, socketIds.map(function (socketId, i) { return ({
                                socketId: socketId,
                                userId: userIds[i]
                            }); })];
                }
            });
        });
    }
    function getClientsInRoom(room) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        io["in"](room).clients(function (err, clients) {
                            if (err) {
                                reject(err);
                            }
                            else {
                                resolve(clients);
                            }
                        });
                    })];
            });
        });
    }
}
exports["default"] = handleSocket;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ja2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NlcnZlci9zb2NrZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNaLGdEQUEwQjtBQUkxQixJQUFNLEtBQUssR0FBRyxrQkFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUE7QUFPeEMsU0FBd0IsWUFBWSxDQUNsQyxNQUFvQixFQUNwQixFQUFXLEVBQ1gsTUFBYztJQUhoQixpQkFvRUM7SUEvREMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7Ozs7d0JBQ1QscUJBQU0sTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUE7O29CQUFyRCxNQUFNLEdBQUcsU0FBNEM7eUJBQ3ZELE1BQU0sRUFBTix3QkFBTTtvQkFDUixxQkFBTSxPQUFPLENBQUMsR0FBRyxDQUFDOzRCQUNoQixNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7NEJBQ3pDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO3lCQUN2QyxDQUFDLEVBQUE7O29CQUhGLFNBR0UsQ0FBQTs7Ozs7U0FFTCxDQUFDLENBQUE7SUFFRixNQUFNLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFNLE9BQU87Ozs7d0JBRWQscUJBQU0sTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUE7O29CQUE1RCxRQUFRLEdBQUcsU0FBaUQ7b0JBQ25ELHFCQUFNLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFBOztvQkFBckQsTUFBTSxHQUFHLFNBQTRDO29CQUMzRCxJQUFJLFFBQVEsRUFBRTt3QkFDWixFQUFFLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7NEJBQzdCLE1BQU0sUUFBQTs0QkFDTixNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU07eUJBQ3ZCLENBQUMsQ0FBQTtxQkFDSDs7OztTQUNGLENBQUMsQ0FBQTtJQUVGLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQU0sT0FBTzs7Ozs7b0JBQ3RCLE1BQU0sR0FBVyxPQUFPLE9BQWxCLEVBQUUsSUFBSSxHQUFLLE9BQU8sS0FBWixDQUFZO29CQUNoQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFBO29CQUMxQyxxRUFBcUU7b0JBQ3JFLG9DQUFvQztvQkFDcEMscUJBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQzs0QkFDaEIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQzs0QkFDOUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQzt5QkFDL0MsQ0FBQyxFQUFBOztvQkFMRixxRUFBcUU7b0JBQ3JFLG9DQUFvQztvQkFDcEMsU0FHRSxDQUFBO29CQUNGLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7b0JBRUgscUJBQU0sUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFBOztvQkFBNUIsS0FBSyxHQUFHLFNBQW9CO29CQUVsQyxLQUFLLENBQUMsZ0NBQWdDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQTtvQkFFNUQsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO3dCQUN4QixTQUFTLEVBQUUsTUFBTTt3QkFDakIsS0FBSyxPQUFBO3FCQUNOLENBQUMsQ0FBQTs7OztTQUNILENBQUMsQ0FBQTtJQUVGLFNBQWUsUUFBUSxDQUFFLElBQVk7Ozs7OzRCQUNqQixxQkFBTSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBQTs7d0JBQXhDLFNBQVMsR0FBRyxTQUE0Qjt3QkFDOUIscUJBQU0sTUFBTSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBQTs7d0JBQTFELE9BQU8sR0FBRyxTQUFnRDt3QkFDaEUsc0JBQU8sU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFDLFFBQVEsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDO2dDQUNyQyxRQUFRLFVBQUE7Z0NBQ1IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7NkJBQ25CLENBQUMsRUFIb0MsQ0FHcEMsQ0FBQyxFQUFBOzs7O0tBQ0o7SUFFRCxTQUFlLGdCQUFnQixDQUFDLElBQVk7OztnQkFDMUMsc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTt3QkFDakMsRUFBRSxDQUFDLElBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEdBQVUsRUFBRSxPQUFpQjs0QkFDaEQsSUFBSSxHQUFHLEVBQUU7Z0NBQ1AsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBOzZCQUNaO2lDQUFNO2dDQUNMLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQTs2QkFDakI7d0JBQ0gsQ0FBQyxDQUFDLENBQUE7b0JBQ0osQ0FBQyxDQUFDLEVBQUE7OztLQUNIO0FBQ0gsQ0FBQztBQXBFRCxrQ0FvRUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmltcG9ydCBfZGVidWcgZnJvbSAnZGVidWcnXG5pbXBvcnQgeyBTZXJ2ZXJTb2NrZXQsIFR5cGVkSU8gfSBmcm9tICcuLi9zaGFyZWQnXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gJy4vc3RvcmUnXG5cbmNvbnN0IGRlYnVnID0gX2RlYnVnKCdwZWVyY2FsbHM6c29ja2V0JylcblxuZXhwb3J0IGludGVyZmFjZSBTdG9yZXMge1xuICB1c2VySWRCeVNvY2tldElkOiBTdG9yZVxuICBzb2NrZXRJZEJ5VXNlcklkOiBTdG9yZVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVTb2NrZXQoXG4gIHNvY2tldDogU2VydmVyU29ja2V0LFxuICBpbzogVHlwZWRJTyxcbiAgc3RvcmVzOiBTdG9yZXMsXG4pIHtcbiAgc29ja2V0Lm9uY2UoJ2Rpc2Nvbm5lY3QnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdXNlcklkID0gYXdhaXQgc3RvcmVzLnVzZXJJZEJ5U29ja2V0SWQuZ2V0KHNvY2tldC5pZClcbiAgICBpZiAodXNlcklkKSB7XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIHN0b3Jlcy51c2VySWRCeVNvY2tldElkLnJlbW92ZShzb2NrZXQuaWQpLFxuICAgICAgICBzdG9yZXMuc29ja2V0SWRCeVVzZXJJZC5yZW1vdmUodXNlcklkKSxcbiAgICAgIF0pXG4gICAgfVxuICB9KVxuXG4gIHNvY2tldC5vbignc2lnbmFsJywgYXN5bmMgcGF5bG9hZCA9PiB7XG4gICAgLy8gZGVidWcoJ3NpZ25hbDogJXMsIHBheWxvYWQ6ICVvJywgc29ja2V0LnVzZXJJZCwgcGF5bG9hZClcbiAgICBjb25zdCBzb2NrZXRJZCA9IGF3YWl0IHN0b3Jlcy5zb2NrZXRJZEJ5VXNlcklkLmdldChwYXlsb2FkLnVzZXJJZClcbiAgICBjb25zdCB1c2VySWQgPSBhd2FpdCBzdG9yZXMudXNlcklkQnlTb2NrZXRJZC5nZXQoc29ja2V0LmlkKVxuICAgIGlmIChzb2NrZXRJZCkge1xuICAgICAgaW8udG8oc29ja2V0SWQpLmVtaXQoJ3NpZ25hbCcsIHtcbiAgICAgICAgdXNlcklkLFxuICAgICAgICBzaWduYWw6IHBheWxvYWQuc2lnbmFsLFxuICAgICAgfSlcbiAgICB9XG4gIH0pXG5cbiAgc29ja2V0Lm9uKCdyZWFkeScsIGFzeW5jIHBheWxvYWQgPT4ge1xuICAgIGNvbnN0IHsgdXNlcklkLCByb29tIH0gPSBwYXlsb2FkXG4gICAgZGVidWcoJ3JlYWR5OiAlcywgcm9vbTogJXMnLCB1c2VySWQsIHJvb20pXG4gICAgLy8gbm8gbmVlZCB0byBsZWF2ZSByb29tcyBiZWNhdXNlIHRoZXJlIHdpbGwgYmUgb25seSBvbmUgcm9vbSBmb3IgdGhlXG4gICAgLy8gZHVyYXRpb24gb2YgdGhlIHNvY2tldCBjb25uZWN0aW9uXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgc3RvcmVzLnNvY2tldElkQnlVc2VySWQuc2V0KHVzZXJJZCwgc29ja2V0LmlkKSxcbiAgICAgIHN0b3Jlcy51c2VySWRCeVNvY2tldElkLnNldChzb2NrZXQuaWQsIHVzZXJJZCksXG4gICAgXSlcbiAgICBzb2NrZXQuam9pbihyb29tKVxuXG4gICAgY29uc3QgdXNlcnMgPSBhd2FpdCBnZXRVc2Vycyhyb29tKVxuXG4gICAgZGVidWcoJ3JlYWR5OiAlcywgcm9vbTogJXMsIHVzZXJzOiAlbycsIHVzZXJJZCwgcm9vbSwgdXNlcnMpXG5cbiAgICBpby50byhyb29tKS5lbWl0KCd1c2VycycsIHtcbiAgICAgIGluaXRpYXRvcjogdXNlcklkLFxuICAgICAgdXNlcnMsXG4gICAgfSlcbiAgfSlcblxuICBhc3luYyBmdW5jdGlvbiBnZXRVc2VycyAocm9vbTogc3RyaW5nKSB7XG4gICAgY29uc3Qgc29ja2V0SWRzID0gYXdhaXQgZ2V0Q2xpZW50c0luUm9vbShyb29tKVxuICAgIGNvbnN0IHVzZXJJZHMgPSBhd2FpdCBzdG9yZXMudXNlcklkQnlTb2NrZXRJZC5nZXRNYW55KHNvY2tldElkcylcbiAgICByZXR1cm4gc29ja2V0SWRzLm1hcCgoc29ja2V0SWQsIGkpID0+ICh7XG4gICAgICBzb2NrZXRJZCxcbiAgICAgIHVzZXJJZDogdXNlcklkc1tpXSxcbiAgICB9KSlcbiAgfVxuXG4gIGFzeW5jIGZ1bmN0aW9uIGdldENsaWVudHNJblJvb20ocm9vbTogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBpby5pbihyb29tKS5jbGllbnRzKChlcnI6IEVycm9yLCBjbGllbnRzOiBzdHJpbmdbXSkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KGVycilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKGNsaWVudHMpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuXG4iXX0=